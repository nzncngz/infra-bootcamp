# Taken from https://github.com/minio/minio-service/blob/master/linux-systemd/minio.service and tweaked
[Unit]
Description=Minio-service
Documentation=https://docs.minio.io
Wants=network-online.target
After=network-online.target
AssertFileIsExecutable={{ minio_default_install_dir }}/minio

[Service]
WorkingDirectory=/usr/local

User={{ minio_user }}
Group={{ minio_user }}

PermissionsStartOnly=true

EnvironmentFile=-/etc/default/minio
ExecStartPre=/bin/bash -c "[ -n \"${MINIO_VOLUMES}\" ] || (echo \"Variable MINIO_VOLUMES not set in /etc/default/{{ 'minio' ~ minio_name_separator ~ item.name }}\" && exit 1)"
{% if minio_tune_kernel %}
ExecStartPre=/bin/bash -c "echo 'madvise' > /sys/kernel/mm/transparent_hugepage/enabled"
{% endif %}

#ExecStart={{ minio_binary_dir }}/minio server --address {{ item.bind_address ~ ':' ~ item.bind_port }} $MINIO_OPTS $MINIO_VOLUMES
#minio server https://minio{1...4}.example.com/mnt/disk{1...4}/data
ExecStart={{ minio_default_install_dir }}/minio server  http://192.168.135.{12...14}:9000/mnt/disks/data{1...8}
# Let systemd restart this service only if it has ended with the clean exit code or signal.
Restart=on-success


# Specifies the maximum file descriptor number that can be opened by this process
LimitNOFILE=65536

# Disable timeout logic and wait until process is stopped
TimeoutStopSec=infinity

# SIGTERM signal is used to stop Minio
KillSignal=SIGTERM

SendSIGKILL=no

SuccessExitStatus=0

[Install]
WantedBy=multi-user.target
